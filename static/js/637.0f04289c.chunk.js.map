{"version":3,"file":"static/js/637.0f04289c.chunk.js","mappings":"4RAQMA,EAASC,EAAAA,GAAAA,IAAH,+LAUNC,EAAaD,EAAAA,GAAAA,GAAH,gNAWVE,EAAWF,EAAAA,GAAAA,IAAH,mJASRG,EAAQH,EAAAA,GAAAA,MAAH,ylBA+BLI,EAAOJ,EAAAA,GAAAA,KAAH,gJASJK,EAAML,EAAAA,GAAAA,OAAH,0XAwFT,UApEkB,WAChB,OAAgBM,EAAAA,EAAAA,MAATC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,mCAAG,WAAMC,GAAN,sFACbC,EAAOD,EAAIE,OACXC,EAAQF,EAAKE,MAAMC,MACnBC,EAAWJ,EAAKI,SAASD,MAEzBE,EAAc,CAAEH,MAAAA,EAAOE,SAAAA,GAC7BL,EAAIO,iBANe,SAObb,EAAMY,GACTE,SACAC,MAAK,gBAAGC,EAAH,EAAGA,MAAH,OAAeC,EAAAA,EAAAA,IAAY,QAASD,EAApC,IACLE,OAAM,WACLC,EAAAA,GAAAA,KAAW,8CACZ,IAZgB,OAcbH,EAAQC,EAAAA,EAAAA,IAAY,SAC1Bd,GAASiB,EAAAA,EAAAA,IAASJ,IAClBf,EAAS,aAETM,EAAKc,QAlBc,4CAAH,sDAqBlB,OACE,+BACE,UAAC7B,EAAD,YACE,SAACE,EAAD,sBACA,kBAAM4B,SAAUjB,EAAhB,WACE,SAACV,EAAD,WACE,8BACE,SAACC,EAAD,CACE2B,KAAK,QACLC,KAAK,QACLC,QAAQ,0CACRC,MAAM,2EACNC,UAAQ,EACRC,YAAY,IACZC,aAAa,yBAEf,SAAChC,EAAD,0BAGJ,SAACF,EAAD,WACE,8BACE,SAACC,EAAD,CACE2B,KAAK,WACLC,KAAK,WACLC,QAAQ,uCACRC,MAAM,6GACNC,UAAQ,EACRC,YAAY,IACZC,aAAa,oBAEf,SAAChC,EAAD,6BAGJ,SAACF,EAAD,WACE,SAACG,EAAD,CAAKyB,KAAK,SAAV,6BAMX,C,uBCpKD,SAASO,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChB3B,EAAQ4B,EAAK5B,KAInB,CAHE,MAAO6B,GAEP,YADAN,EAAOM,EAET,CAEID,EAAKE,KACPR,EAAQtB,GAER+B,QAAQT,QAAQtB,GAAOK,KAAKmB,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMxB,GACboB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQzB,EAClE,CAEA,SAASyB,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["pages/LoginPage.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { addToken } from 'components/redux/Actions';\nimport { useDispatch } from 'react-redux';\nimport { useLoginMutation } from 'services/phonebookApi';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\nimport Cookies from 'js-cookie';\n\nconst Center = styled.div`\n  position: relative;\n  padding: 50px 25px;\n  background: #fff;\n  border-radius: 10px;\n  box-shadow: 0 4px 2px 1px black;\n  max-width: 350px;\n  margin: 0 auto;\n`;\n\nconst MainHeader = styled.h1`\n  font-size: 2em;\n  border-left: 5px solid dodgerblue;\n  padding: 10px;\n  color: #000;\n  letter-spacing: 5px;\n  margin-bottom: 60px;\n  font-weight: bold;\n  padding-left: 10px;\n`;\n\nconst Inputbox = styled.div`\n  position: relative;\n  max-width: 100%;\n  height: 50px;\n  margin-bottom: 50px;\n  &:last-child {\n  margin-bottom: 0;\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  border: 2px solid #000;\n  outline: none;\n  background: none;\n  padding: 10px;\n  border-radius: 10px;\n  font-size: 1.2em;\n  box-sizing: border-box;\n\n  &:focus ~ span {\n    transform: translateX(-13px) translateY(-35px);\n    font-size: 1em;\n  }\n\n  &:not(:placeholder-shown) ~ span {\n    color: red;\n    transform: translateX(-13px) translateY(-35px);\n    font-size: 1em;\n  }\n\n  &:valid ~ span {\n    color: #86af49;\n    transform: translateX(-13px) translateY(-35px);\n    font-size: 1em;\n  }\n`;\n\nconst Span = styled.span`\n  position: absolute;\n  top: 14px;\n  left: 20px;\n  font-size: 1em;\n  transition: 0.6s;\n  font-family: sans-serif;\n`;\n\nconst Btn = styled.button`\n  cursor: pointer;\n  position: absolute;\n  top: 0;\n  left: 0;\n  border: 2px solid #000;\n  outline: none;\n  background: none;\n  padding: 10px;\n  border-radius: 10px;\n  font-size: 1.2em;\n  width: 50%;\n  background: dodgerblue;\n  color: #fff;\n  border: #fff;\n  &:hover {\n    background: linear-gradient(45deg, greenyellow, dodgerblue);\n  }\n`;\n\nconst LoginPage = () => {\n  const [login] = useLoginMutation();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleSubmit = async evt => {\n    const form = evt.target;\n    const email = form.email.value;\n    const password = form.password.value;\n\n    const credentials = { email, password };\n    evt.preventDefault();\n    await login(credentials)\n      .unwrap()\n      .then(({ token }) => Cookies.set('token', token))\n      .catch(() => {\n        toast.warn('Please check your email address or password');\n      });\n\n    const token = Cookies.get('token');\n    dispatch(addToken(token));\n    navigate('/contacts');\n\n    form.reset();\n  };\n\n  return (\n    <>\n      <Center>\n        <MainHeader>Log in</MainHeader>\n        <form onSubmit={handleSubmit}>\n          <Inputbox>\n            <label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n                title=\"Please enter your e-mail address (example: characters@characters.domain)\"\n                required\n                placeholder=\" \"\n                defaultValue=\"tester123@gmail.com\"\n              />\n              <Span>Email</Span>\n            </label>\n          </Inputbox>\n          <Inputbox>\n            <label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\"\n                title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 6 or more characters\"\n                required\n                placeholder=\" \"\n                defaultValue=\"Tester123!GoIT\"\n              />\n              <Span>Password</Span>\n            </label>\n          </Inputbox>\n          <Inputbox>\n            <Btn type=\"submit\">Log in</Btn>\n          </Inputbox>\n        </form>\n      </Center>\n    </>\n  );\n};\n\nexport default LoginPage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Center","styled","MainHeader","Inputbox","Input","Span","Btn","useLoginMutation","login","navigate","useNavigate","dispatch","useDispatch","handleSubmit","evt","form","target","email","value","password","credentials","preventDefault","unwrap","then","token","Cookies","catch","toast","addToken","reset","onSubmit","type","name","pattern","title","required","placeholder","defaultValue","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}